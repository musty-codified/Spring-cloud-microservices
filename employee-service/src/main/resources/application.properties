#Spring cloud sleuth sends a request to zipkin server in an async manner using rabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#Config server configuration
spring.application.name=EMPLOYEE-SERVICE
spring.config.import=optional:configserver:http://localhost:8889

management.tracing.sampling.probability=1.0
logging.pattern.level=%5p[${spring.application.name}, %X{traceId:-}, %X{spanId:-}]

spring.zipkin.base-url=http://127.0.0.1:9411/

#Actuator endpoints for circuit-breaker
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

#Circuit breaker configurations for fault-tolerance
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.slidingWindowSize=10

#resilience4j.retry.instances.EMPLOYEE-SERVICE.registerHealthIndicator=true
#resilience4j.retry.instances.EMPLOYEE-SERVICE.maxRetryAttempts=5
#resilience4j.retry.instances.EMPLOYEE-SERVICE.waitDuration=2s